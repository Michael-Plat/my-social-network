{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,2B,mHCGzIC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,mCCSRE,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,QCEvBC,EAPC,SAACR,GAEb,OACI,yBAAKG,UAAWC,IAAEK,SAAUT,EAAMS,U,iCC2BpCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,qBAC1DC,SAAU,CAACC,IAAUZ,MAG7B,6BACI,gDAQDa,EA5CC,SAACvB,GAEb,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE1B,GAAIA,GAAI0B,EAAE1B,QAEhG4B,EAAmB9B,EAAMyB,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE9B,QAM/F,OACI,yBAAKC,UAAWC,IAAEsB,SACd,yBAAKvB,UAAWC,IAAE6B,cACbT,GAEL,yBAAKrB,UAAWC,IAAE2B,UACbD,GAEL,6BACI,kBAAClB,EAAD,CAAqBG,SAbb,SAACmB,GACjBlC,EAAMmC,WAAWD,EAAOE,sBCOjBC,sBACXC,aAfoB,SAAC1C,GACrB,MAAO,CACH6B,YAAa7B,EAAM6B,gBAIA,SAACc,GACxB,MAAO,CACHJ,WAAY,SAACC,GACTG,EAASC,YAAwBJ,UJTb,SAACK,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK3C,MAAMH,OACT,kBAAC4C,EAAcE,KAAK3C,OADI,kBAAC,IAAD,CAAUM,GAAG,eAHT,GACXsC,IAAMH,WAQtC,OAFmCH,YAAQ3C,EAAR2C,CAAoCI,KIO5DL,CAGbd","file":"static/js/8.042250c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  });\n\nexport const WithAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/Login' />;\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectAuthRedirectComponent;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n    let path = \"/Dialogs/\" + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    );\n}\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n\n    return (\n        <div className={s.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","import React from 'react'\nimport DialogItem from './DialogItem/DialogItem'\nimport s from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport { reduxForm, Field } from 'redux-form'\nimport { Textarea } from '../common/FormsControls/FormControls'\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n            </div>\n            <div>\n                <AddMessageFormRedux onSubmit={addNewMessage} />\n            </div>\n        </div>\n    );\n}\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n            <div>\n                <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\"\n                    validate={[required, maxLength50]} />\n                {/* <textarea onChange={onMessageChange}  value={props.dialogsPage.newMessageText}></textarea> */}\n            </div>\n            <div>\n                <button>Message</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect.jsx';\nimport { addMessageActionCreator } from '../../redax/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport s from './Dialogs.module.css';\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithAuthRedirect\n)(Dialogs);\n\n"],"sourceRoot":""}